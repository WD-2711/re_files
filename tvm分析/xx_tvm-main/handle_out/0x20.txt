0x20 p_a p_b

0x0D45

*(PUCHAR)p_a = *(PULONG32)p_b & (1<<6);//取 rf.zf

v_setz_oregb_iregl
----------------------------------------

0x1400d71f8 : mov     r9, [rbp+8]                     
0x1400d7205 : mov     r8w, [r9]                       
0x1400d7209 : xor     r8w, 0D45h                      
0x1400d720f : mov     rdx, 0C55E064D5923801Dh         
0x1400d7219 : not     rdx                             
0x1400d721c : jmp     loc_1400D7439                   
0x1400d743a : lea     rdx, [r10+rdx]                  
0x1400d743e : movzx   r8, r8w                         
0x1400d7442 : mov     rcx, 3AA1F9B2A6DC7FE1h          
0x1400d744c : not     rcx                             
0x1400d744f : add     r8, rcx                         
0x1400d7452 : lea     r8, [rdx+r8]                    p_a = r8
0x1400d7456 : lea     r9, [r9+2]                      
0x1400d745a : mov     dx, [r9]                        
0x1400d745e : xor     dx, 0D45h                       
0x1400d7463 : movzx   rdx, dx                         
0x1400d7467 : lea     rdx, [r10+rdx]                  p_b = rdx
0x1400d746b : pushfq                                  
0x1400d746c : mov     rcx, [rsp+90h+var_90]           
0x1400d7470 : lea     rsp, [rsp+8]                    
0x1400d7475 : mov     eax, [rdx]                      rf = *(PULONG32)p_b
0x1400d7477 : mov     eax, eax                        
0x1400d7479 : jmp     loc_1400D6831                   
0x1400d6833 : lea     rsp, [rsp-8]                    
0x1400d6838 : mov     [rsp+90h+var_90], rax           
0x1400d683c : popfq                                   
0x1400d683d : setz    al                              al = rf.zf
0x1400d6840 : pushfq                                  
0x1400d6841 : mov     rbx, [rsp+90h+var_90]           
0x1400d6845 : lea     rsp, [rsp+8]                    
0x1400d684a : mov     [rdx], ebx                      *(PULONG32)p_b = rf
0x1400d684c : jmp     loc_1400D728F                   
0x1400d7291 : lea     rsp, [rsp-8]                    
0x1400d7296 : mov     [rsp+90h+var_90], rcx           
0x1400d729a : popfq                                   
0x1400d729b : mov     [r8], al                        *(PUCHAR)p_a = al
0x1400d729e : lea     r9, [r9+2]                      
0x1400d72a8 : mov     [rbp+8], r9                     
0x1400d72b2 : jmp     loc_1400D7232                   
0x1400d7234 : mov     r9, [rbp+8]                     
0x1400d7240 : jmp     loc_1400D99D9                   
0x1400d99db : mov     r8b, [r9]                       
0x1400d99de : xor     r8b, 5Dh                        
0x1400d99e2 : mov     rdx, 25E9ECA9BDE22AEAh          
0x1400d99ec : not     rdx                             
0x1400d99ef : lea     rdx, [r9+rdx]                   
0x1400d99f3 : jmp     loc_1400D86A6                   
0x1400d86a8 : mov     r9, 0DA161356421DD513h          
0x1400d86b2 : not     r9                              
0x1400d86b5 : lea     r9, [rdx+r9]                    
0x1400d86bf : mov     [rbp+8], r9                     
0x1400d86c9 : movzx   r8, r8b                         
0x1400d86cd : sub     r8, 1                           
0x1400d86d1 : jmp     loc_1400D7E10                   
0x1400d7e11 : cmp     r8, 0C8h                        
0x1400d7e18 : jnb     def_1400D655C; jumptable 00000001400D655C default case, cases 1-6,8,13,14,33-36,38,41-44,49,50,52,54,57-60,62,65-67,69-74,77-80,82,83,85-90,93-96,98-113,115,117,119,121-123,126,128-131,133,134,144-147,149,152-157,159,162-164,166-168,170-177,182,185-193,196-199
